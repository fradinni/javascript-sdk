import { RuntimeLeaseUpdateRequestJson } from './__json__/vapp-runtime-lease-update-request-json';

/**
 * Request to update a vAppruntime lease.
 */
/* istanbul ignore next: autogenerated */
export class RuntimeLeaseUpdateRequest {

  private readonly _json: RuntimeLeaseUpdateRequestJson;

  constructor(runtimeLeaseUpdateRequest: RuntimeLeaseUpdateRequest);
  constructor(runtimeLeaseUpdateRequestJson: RuntimeLeaseUpdateRequestJson);
  constructor(expirationInSeconds: number);
  constructor(firstParam: number | RuntimeLeaseUpdateRequest | RuntimeLeaseUpdateRequestJson) {
    if (typeof firstParam === 'number') {
      // Parameters constructor
      this._json = {
        expiration_in_seconds: firstParam
      } as RuntimeLeaseUpdateRequestJson;
    } else if (firstParam instanceof RuntimeLeaseUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as RuntimeLeaseUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as RuntimeLeaseUpdateRequestJson;
    }
  }

  /**
   * Get expiration in seconds.
   * @returns {number}
   */
  get expirationInSeconds(): number {
    return this._json.expiration_in_seconds;
  }

  /**
   * Get the json representation of this class.
   * @returns {RuntimeLeaseUpdateRequestJson}
   */
  get json(): RuntimeLeaseUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
