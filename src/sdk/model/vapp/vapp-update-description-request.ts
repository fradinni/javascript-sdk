import { VappDescriptionUpdateRequestJson } from './__json__/vapp-update-description-request-json';

/**
 * Requet to update a vApp description.
 */
/* istanbul ignore next: autogenerated */
export class VappDescriptionUpdateRequest {

  private readonly _json: VappDescriptionUpdateRequestJson;

  constructor(vappDescriptionUpdateRequest: VappDescriptionUpdateRequest);
  constructor(vappDescriptionUpdateRequestJson: VappDescriptionUpdateRequestJson);
  constructor(description: string);
  constructor(firstParam: string | VappDescriptionUpdateRequest | VappDescriptionUpdateRequestJson) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        description: firstParam
      } as VappDescriptionUpdateRequestJson;
    } else if (firstParam instanceof VappDescriptionUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as VappDescriptionUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as VappDescriptionUpdateRequestJson;
    }
  }

  /**
   * Get description.
   * @returns {string}
   */
  get description(): string {
    return this._json.description;
  }

  /**
   * Get the json representation of this class.
   * @returns {VappDescriptionUpdateRequestJson}
   */
  get json(): VappDescriptionUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
