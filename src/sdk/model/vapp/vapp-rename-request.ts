import { VappRenameRequestJson } from './__json__/vapp-rename-request-json';

/**
 * Request to rename a vApp.
 */
/* istanbul ignore next: autogenerated */
export class VappRenameRequest {

  private readonly _json: VappRenameRequestJson;

  constructor(vappRenameRequest: VappRenameRequest);
  constructor(vappRenameRequestJson: VappRenameRequestJson);
  constructor(name: string);
  constructor(firstParam: string | VappRenameRequest | VappRenameRequestJson) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        name: firstParam
      } as VappRenameRequestJson;
    } else if (firstParam instanceof VappRenameRequest) {
      // Copy constructor
      this._json = (firstParam as VappRenameRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as VappRenameRequestJson;
    }
  }

  /**
   * Get name.
   * @returns {string}
   */
  get name(): string {
    return this._json.name;
  }

  /**
   * Get the json representation of this class.
   * @returns {VappRenameRequestJson}
   */
  get json(): VappRenameRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
