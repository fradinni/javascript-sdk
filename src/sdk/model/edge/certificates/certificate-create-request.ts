import { CertificateCreateRequestJson } from './__json__/certificate-create-request-json';
import { TrustObjectRequestJson } from './__json__/trust-object-request-json';
import { TrustObjectRequest } from './trust-object-request';

/* istanbul ignore next: autogenerated */
export class CertificateCreateRequest {

  private readonly _json: CertificateCreateRequestJson;

  constructor(certificateCreateRequest: CertificateCreateRequest);
  constructor(certificateCreateRequestJson: CertificateCreateRequestJson);
  constructor(trustObject: TrustObjectRequest);
  constructor(firstParam: TrustObjectRequest | CertificateCreateRequest | CertificateCreateRequestJson) {
    if (firstParam instanceof TrustObjectRequest) {
      // Parameters constructor
      this._json = {
        trust_object: firstParam.json
      } as CertificateCreateRequestJson;
    } else if (firstParam instanceof CertificateCreateRequest) {
      // Copy constructor
      this._json = (firstParam as CertificateCreateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as CertificateCreateRequestJson;
    }
  }

  /**
   * Get trust object.
   * @returns {TrustObjectRequest}
   */
  get trustObject(): TrustObjectRequest {
    return new TrustObjectRequest(this._json.trust_object);
  }

  /**
   * Get the json representation of this class.
   * @returns {CertificateCreateRequestJson}
   */
  get json(): CertificateCreateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
