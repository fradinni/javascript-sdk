import { EdgeSslVpnAuthServerType } from './__json__/edge-ssl-vpn-auth-server-type';
import {
  EdgeSslVpnAuthenticationServerUpdateRequestJson
} from './__json__/edge-ssl-vpn-authentication-server-update-request-json';

/* istanbul ignore next: autogenerated */
export class EdgeSslVpnAuthenticationServerUpdateRequest {

  private readonly _json: EdgeSslVpnAuthenticationServerUpdateRequestJson;

  constructor(edgeSslVpnAuthenticationServerUpdateRequest: EdgeSslVpnAuthenticationServerUpdateRequest);
  constructor(edgeSslVpnAuthenticationServerUpdateRequestJson: EdgeSslVpnAuthenticationServerUpdateRequestJson);
  constructor(firstParam: EdgeSslVpnAuthenticationServerUpdateRequest |
      EdgeSslVpnAuthenticationServerUpdateRequestJson) {
    if (firstParam instanceof EdgeSslVpnAuthenticationServerUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as EdgeSslVpnAuthenticationServerUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as EdgeSslVpnAuthenticationServerUpdateRequestJson;
    }
  }

  /**
   * Get type.
   * @returns {EdgeSslVpnAuthServerType}
   */
  get type(): EdgeSslVpnAuthServerType {
    return this._json.type;
  }

  /**
   * Get the json representation of this class.
   * @returns {EdgeSslVpnAuthenticationServerUpdateRequestJson}
   */
  get json(): EdgeSslVpnAuthenticationServerUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
