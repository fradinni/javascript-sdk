import { EdgeGatewaySslVpnRadiusAuthServerJson } from './__json__/edge-gateway-ssl-vpn-radius-auth-server-json';
import { EdgeGatewaySslVpnAuthServer } from './edge-gateway-ssl-vpn-auth-server';
import { EdgeGatewaySslVpnAuthServerType } from './edge-gateway-ssl-vpn-auth-server-type';

/* istanbul ignore next: autogenerated */
export class EdgeGatewaySslVpnRadiusAuthServer extends EdgeGatewaySslVpnAuthServer {

  constructor(private _json: EdgeGatewaySslVpnRadiusAuthServerJson) {
    super(_json);
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get secondary auth server.
   * @returns {boolean}
   */
  get secondaryAuthServer(): boolean {
    return this._json.secondary_auth_server;
  }

  /**
   * Get terminate session on auth fails.
   * @returns {boolean}
   */
  get terminateSessionOnAuthFails(): boolean {
    return this._json.terminate_session_on_auth_fails;
  }

  /**
   * Get ip.
   * @returns {string}
   */
  get ip(): string {
    return this._json.ip;
  }

  /**
   * Get port.
   * @returns {number}
   */
  get port(): number {
    return this._json.port;
  }

  /**
   * Get timeout.
   * @returns {number}
   */
  get timeout(): number {
    return this._json.timeout;
  }

  /**
   * Get secret.
   * @returns {string}
   */
  get secret(): string {
    return this._json.secret;
  }

  /**
   * Get nas ip.
   * @returns {string}
   */
  get nasIp(): string {
    return this._json.nas_ip;
  }

  /**
   * Get retry count.
   * @returns {number}
   */
  get retryCount(): number {
    return this._json.retry_count;
  }

  /**
   * Get auth server type.
   * @returns {EdgeGatewaySslVpnAuthServerType}
   */
  get authServerType(): EdgeGatewaySslVpnAuthServerType {
    return this._json.auth_server_type;
  }

  /**
   * Get the json representation of this class.
   * @returns {EdgeGatewaySslVpnRadiusAuthServerJson}
   */
  get json(): EdgeGatewaySslVpnRadiusAuthServerJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
