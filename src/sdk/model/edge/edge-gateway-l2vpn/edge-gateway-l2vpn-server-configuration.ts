import { EdgeGatewayL2VpnServerConfigurationJson } from './__json__/edge-gateway-l2vpn-server-configuration-json';
import { EdgeGatewayL2vpnEncryptionAlgorithmType } from './edge-gateway-l2vpn-encryption-algorithm-type';
import { EdgeGatewayL2VpnPeerSite } from './edge-gateway-l2vpn-peer-site';

/* istanbul ignore next: autogenerated */
export class EdgeGatewayL2VpnServerConfiguration {
  constructor(private _json: EdgeGatewayL2VpnServerConfigurationJson) {
  }

  /**
   * Get listener ip.
   * @returns {string}
   */
  get listenerIp(): string {
    return this._json.listener_ip;
  }

  /**
   * Get listener port.
   * @returns {number}
   */
  get listenerPort(): number {
    return this._json.listener_port;
  }

  /**
   * Get encryption algorithm.
   * @returns {Array<EdgeGatewayL2vpnEncryptionAlgorithmType>}
   */
  get encryptionAlgorithm(): Array<EdgeGatewayL2vpnEncryptionAlgorithmType> {
    return this._json.encryption_algorithm;
  }

  /**
   * Get server certificate.
   * @returns {string}
   */
  get serverCertificate(): string {
    return this._json.server_certificate;
  }

  /**
   * Get peer sites.
   * @returns {Array<EdgeGatewayL2VpnPeerSite>}
   */
  get peerSites(): Array<EdgeGatewayL2VpnPeerSite> {
    return this._json.peer_sites.map(it => new EdgeGatewayL2VpnPeerSite(it));
  }

  /**
   * Get the json representation of this class.
   * @returns {EdgeGatewayL2VpnServerConfigurationJson}
   */
  get json(): EdgeGatewayL2VpnServerConfigurationJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
