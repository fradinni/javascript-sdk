import { NATServiceUpdateRequestJson } from './__json__/nat-service-update-request-json';

/**
 * Nat Service Update Request.
 */
/* istanbul ignore next: autogenerated */
export class NATServiceUpdateRequest {

  private readonly _json: NATServiceUpdateRequestJson;

  constructor(nATServiceUpdateRequest: NATServiceUpdateRequest);
  constructor(nATServiceUpdateRequestJson: NATServiceUpdateRequestJson);
  constructor(externalIp: string, natType: string, policy: string, enabled: boolean);
  constructor(firstParam: string | NATServiceUpdateRequest | NATServiceUpdateRequestJson, natType?: string,
              policy?: string, enabled?: boolean) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        external_ip: firstParam,
        nat_type: natType,
        policy: policy,
        enabled: enabled
      } as NATServiceUpdateRequestJson;
    } else if (firstParam instanceof NATServiceUpdateRequest) {
      // Copy constructor
      this._json = (firstParam as NATServiceUpdateRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as NATServiceUpdateRequestJson;
    }
  }

  /**
   * Get external ip.
   * @returns {string}
   */
  get externalIp(): string {
    return this._json.external_ip;
  }

  /**
   * Get nat type.
   * @returns {string}
   */
  get natType(): string {
    return this._json.nat_type;
  }

  /**
   * Get policy.
   * @returns {string}
   */
  get policy(): string {
    return this._json.policy;
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get the json representation of this class.
   * @returns {NATServiceUpdateRequestJson}
   */
  get json(): NATServiceUpdateRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
