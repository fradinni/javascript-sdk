import { EdgeGatewayNatJson } from './__json__/edge-gateway-nat-json';
import { EdgeGatewayNatRule } from './edge-gateway-nat-rule';
import { EdgeGatewayNat64Rule } from './edge-gateway-nat64-rule';

/**
 * Edge Gateway NAT
 */
/* istanbul ignore next: autogenerated */
export class EdgeGatewayNat {

  constructor(private _json: EdgeGatewayNatJson) {
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get nat rules.
   * @returns {Array<EdgeGatewayNatRule>}
   */
  get natRules(): Array<EdgeGatewayNatRule> {
    return this._json.nat_rules.map(it => new EdgeGatewayNatRule(it));
  }

  /**
   * Get nat64 rules.
   * @returns {Array<EdgeGatewayNat64Rule>}
   */
  get nat64Rules(): Array<EdgeGatewayNat64Rule> {
    return this._json.nat64_rules.map(it => new EdgeGatewayNat64Rule(it));
  }

  /**
   * Get the json representation of this class.
   * @returns {EdgeGatewayNatJson}
   */
  get json(): EdgeGatewayNatJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
