import { GoogleIdentityProviderConfigRequestJson } from './__json__/google-identity-provider-config-request-json';

/* istanbul ignore next: autogenerated */
export class GoogleIdentityProviderConfigRequest {

  private readonly _json: GoogleIdentityProviderConfigRequestJson;

  constructor(immutableGoogleIdentityProviderConfigRequest: GoogleIdentityProviderConfigRequest);
  constructor(immutableGoogleIdentityProviderConfigRequestJson: GoogleIdentityProviderConfigRequestJson);
  constructor(firstParam: GoogleIdentityProviderConfigRequest | GoogleIdentityProviderConfigRequestJson) {
    if (firstParam instanceof GoogleIdentityProviderConfigRequest) {
      // Copy constructor
      this._json = (firstParam as GoogleIdentityProviderConfigRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as GoogleIdentityProviderConfigRequestJson;
    }
  }

  /**
   * Get enforce sso.
   * @returns {boolean}
   */
  get enforceSso(): boolean {
    return this._json.enforce_sso;
  }

  /**
   * Get enabled.
   * @returns {boolean}
   */
  get enabled(): boolean {
    return this._json.enabled;
  }

  /**
   * Get client id.
   * @returns {string}
   */
  get clientId(): string {
    return this._json.client_id;
  }

  /**
   * Get client secret.
   * @returns {string}
   */
  get clientSecret(): string {
    return this._json.client_secret;
  }

  /**
   * Get the json representation of this class.
   * @returns {GoogleIdentityProviderConfigRequestJson}
   */
  get json(): GoogleIdentityProviderConfigRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
