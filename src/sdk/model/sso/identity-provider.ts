import { IdentityProviderJson } from './__json__/identity-provider-json';
import { IdentityProviderType } from './__json__/identity-provider-type';

/* istanbul ignore next: autogenerated */
export class IdentityProvider {

  constructor(private _jsonData: IdentityProviderJson) {
  }

  /**
   * Whether or not to force all users to sign in using SSO. If enabled
   * all users, even local AD users are forced to sign in through SSO.
   * @returns {boolean} enforceSso
   */
  get enforceSso(): boolean {
    return this._jsonData.enforce_sso;
  }

  /**
   * Whether or not Identity Provider is enabled
   * @returns {boolean} enabled
   */
  get enabled(): boolean {
    return this._jsonData.enabled;
  }

  /**
   * Returns the identity provider type.
   * @returns {IdentityProviderType} type
   */
  get type(): IdentityProviderType {
    return this._jsonData.type;
  }

  /**
   * Get the json representation of this class.
   * @returns {IdentityProviderJson}
   */
  get json(): IdentityProviderJson {
    return Object.assign({}, this._jsonData);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._jsonData, undefined, 2);
  }
}
