import { VappNetworkStaticRouteRequestJson } from './__json__';

/* istanbul ignore next: autogenerated */
export class VappNetworkStaticRouteRequest {

  private readonly _json: VappNetworkStaticRouteRequestJson;

  constructor(vappNetworkStaticRouteRequest: VappNetworkStaticRouteRequest);
  constructor(vappNetworkStaticRouteRequestJson: VappNetworkStaticRouteRequestJson);
  constructor(name: string, network: string, nextHopIP: string);
  constructor(firstParam: string | VappNetworkStaticRouteRequest | VappNetworkStaticRouteRequestJson, network?: string,
              nextHopIP?: string) {
    if (typeof firstParam === 'string') {
      // Parameters constructor
      this._json = {
        name: firstParam,
        network: network,
        next_hop_i_p: nextHopIP
      } as VappNetworkStaticRouteRequestJson;
    } else if (firstParam instanceof VappNetworkStaticRouteRequest) {
      // Copy constructor
      this._json = (firstParam as VappNetworkStaticRouteRequest).json;
    } else {
      // Json or empty constructor
      this._json = (firstParam || {}) as VappNetworkStaticRouteRequestJson;
    }
  }

  /**
   * Get name.
   * @returns {string}
   */
  get name(): string {
    return this._json.name;
  }

  /**
   * Get network.
   * @returns {string}
   */
  get network(): string {
    return this._json.network;
  }

  /**
   * Get next hop i p.
   * @returns {string}
   */
  get nextHopIP(): string {
    return this._json.next_hop_i_p;
  }

  /**
   * Get the json representation of this class.
   * @returns {VappNetworkStaticRouteRequestJson}
   */
  get json(): VappNetworkStaticRouteRequestJson {
    return Object.assign({}, this._json);
  }

  /**
   * Get the string representation of this class.
   * @returns {string}
   */
  toString(): string {
    return JSON.stringify(this._json, undefined, 2);
  }
}
